// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Label component when the required \`handleHover\` prop is passed and the children are passed and the \`label\` prop is \`<span>propLabel</span>\` as shallow should match the snapshot 1`] = `
<label
  className={null}
  onBlur={[Function]}
  onFocus={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onTouchEnd={[Function]}
  onTouchStart={[Function]}
>
  <div>
    child
  </div>
</label>
`;

exports[`Label component when the required \`handleHover\` prop is passed and the children are passed and the \`labelTag\` prop is \`div\` and the \`labelTagClassName\` prop is \`test\` and the \`label\` prop is \`propLabel\` should match the snapshot 1`] = `
<label
  className={null}
  onBlur={[Function]}
  onFocus={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onTouchEnd={[Function]}
  onTouchStart={[Function]}
>
  <div>
    child
  </div>
  <div
    className="test"
    dangerouslySetInnerHTML={
      Object {
        "__html": "propLabel",
      }
    }
  />
</label>
`;

exports[`Label component when the required \`handleHover\` prop is passed and the children are passed and the \`labelTag\` prop is \`div\` and the \`labelTagClassName\` prop is \`test\` and the \`labelChildren\` prop is \`<span>propLabelChildren</span>\` should match the snapshot 1`] = `
<label
  className={null}
  onBlur={[Function]}
  onFocus={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onTouchEnd={[Function]}
  onTouchStart={[Function]}
>
  <div>
    child
  </div>
  <div
    className="test"
  >
    <span>
      propLabelChildren
    </span>
  </div>
</label>
`;

exports[`Label component when the required \`handleHover\` prop is passed and the children are passed as mount should match the default props snapshot 1`] = `
Object {
  "children": <div>
    child
  </div>,
  "disabled": false,
  "handleHover": [MockFunction],
  "isMobile": false,
  "label": null,
  "labelChildren": null,
  "labelClassName": null,
  "labelHover": true,
  "labelTag": "span",
  "labelTagClassName": null,
}
`;

exports[`Label component when the required \`handleHover\` prop is passed and the children are passed as shallow should match the snapshot 1`] = `
<label
  className={null}
  onBlur={[Function]}
  onFocus={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onTouchEnd={[Function]}
  onTouchStart={[Function]}
>
  <div>
    child
  </div>
  <span
    className={null}
    dangerouslySetInnerHTML={
      Object {
        "__html": null,
      }
    }
  />
</label>
`;
