// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CheckboxGroup /> component should have the default props values when mounted 1`] = `
Object {
  "checkboxWrapClassName": null,
  "checkboxWrapTag": null,
  "children": <Checkbox
    activeClass="active"
    aria={false}
    checkboxClass="icheckbox"
    checked={false}
    checkedClass="checked"
    defaultChecked={false}
    determinateClass={null}
    disabled={false}
    disabledClass="disabled"
    focusClass="focus"
    hoverClass="hover"
    increaseArea=""
    indeterminate={true}
    indeterminateClass="indeterminate"
    inheritClass={false}
    inheritID={false}
    insert={null}
    label={null}
    labelClassName={null}
    labelHover={true}
    labelHoverClass="hover"
    labelTag="span"
    labelTagClassName={null}
    onBlur={null}
    onChange={null}
    onFocus={null}
  />,
  "className": null,
}
`;

exports[`<CheckboxGroup /> component should render the corresponding HTML when only the default props are set 1`] = `
<CheckboxGroup
  checkboxWrapClassName={null}
  checkboxWrapTag={null}
  className={null}
>
  <div
    className={null}
  >
    <Checkbox
      activeClass="active"
      aria={false}
      checkboxClass="icheckbox"
      checked={false}
      checkedClass="checked"
      defaultChecked={false}
      determinateClass={null}
      disabled={false}
      disabledClass="disabled"
      focusClass="focus"
      hoverClass="hover"
      increaseArea=""
      indeterminate={true}
      indeterminateClass="indeterminate"
      inheritClass={false}
      inheritID={false}
      insert={null}
      key=".0"
      label={null}
      labelClassName={null}
      labelHover={true}
      labelHoverClass="hover"
      labelTag="span"
      labelTagClassName={null}
      onBlur={null}
      onChange={null}
      onFocus={null}
    >
      <Input
        activeClass="active"
        aria={false}
        checkboxClass="icheckbox"
        checked={false}
        checkedClass="checked"
        className={null}
        defaultChecked={false}
        disabled={false}
        disabledClass="disabled"
        focusClass="focus"
        hoverClass="hover"
        hovered={false}
        id={null}
        increaseArea=""
        indeterminate={true}
        indeterminateClass="indeterminate"
        inheritClass={false}
        inheritID={false}
        inputType="checkbox"
        insert={null}
        isMobile={false}
        name={null}
        onBlur={null}
        onChange={null}
        onFocus={null}
        radioClass="iradio"
        value=""
      >
        <div
          className="icheckbox indeterminate"
        >
          <input
            checked={false}
            disabled={false}
            name={null}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            style={
              Object {
                "opacity": 0,
                "position": "absolute",
              }
            }
            type="checkbox"
            value=""
          />
          <ins
            className="iCheck-helper"
            onClick={[Function]}
            role="presentation"
            style={
              Object {
                "background": "#fff",
                "border": 0,
                "cursor": "pointer",
                "display": "block",
                "height": "100%",
                "left": "0%",
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "position": "absolute",
                "top": "0%",
                "width": "100%",
              }
            }
          />
        </div>
      </Input>
    </Checkbox>
  </div>
</CheckboxGroup>
`;

exports[`<CheckboxGroup /> component should render the corresponding HTML when the checkboxWrapClassName and checkboxWrapTag props values are set 1`] = `
<CheckboxGroup
  checkboxWrapClassName="test"
  checkboxWrapTag="div"
  className={null}
>
  <div
    className={null}
  >
    <div
      className="test"
      key=".0"
    >
      <Checkbox
        activeClass="active"
        aria={false}
        checkboxClass="icheckbox"
        checked={false}
        checkedClass="checked"
        defaultChecked={false}
        determinateClass={null}
        disabled={false}
        disabledClass="disabled"
        focusClass="focus"
        hoverClass="hover"
        increaseArea=""
        indeterminate={true}
        indeterminateClass="indeterminate"
        inheritClass={false}
        inheritID={false}
        insert={null}
        label={null}
        labelClassName={null}
        labelHover={true}
        labelHoverClass="hover"
        labelTag="span"
        labelTagClassName={null}
        onBlur={null}
        onChange={null}
        onFocus={null}
      >
        <Input
          activeClass="active"
          aria={false}
          checkboxClass="icheckbox"
          checked={false}
          checkedClass="checked"
          className={null}
          defaultChecked={false}
          disabled={false}
          disabledClass="disabled"
          focusClass="focus"
          hoverClass="hover"
          hovered={false}
          id={null}
          increaseArea=""
          indeterminate={true}
          indeterminateClass="indeterminate"
          inheritClass={false}
          inheritID={false}
          inputType="checkbox"
          insert={null}
          isMobile={false}
          name={null}
          onBlur={null}
          onChange={null}
          onFocus={null}
          radioClass="iradio"
          value=""
        >
          <div
            className="icheckbox indeterminate"
          >
            <input
              checked={false}
              disabled={false}
              name={null}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              style={
                Object {
                  "opacity": 0,
                  "position": "absolute",
                }
              }
              type="checkbox"
              value=""
            />
            <ins
              className="iCheck-helper"
              onClick={[Function]}
              role="presentation"
              style={
                Object {
                  "background": "#fff",
                  "border": 0,
                  "cursor": "pointer",
                  "display": "block",
                  "height": "100%",
                  "left": "0%",
                  "margin": 0,
                  "opacity": 0,
                  "padding": 0,
                  "position": "absolute",
                  "top": "0%",
                  "width": "100%",
                }
              }
            />
          </div>
        </Input>
      </Checkbox>
    </div>
  </div>
</CheckboxGroup>
`;
